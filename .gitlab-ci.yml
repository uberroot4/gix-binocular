stages:
  - build
  - benchmark

build:gitinfo:release:
  stage: build
  image: rust:1.74.1-alpine3.18
  cache:
    - key:
        files:
          - Cargo.lock
      fallback_keys:
        - cache-$CI_DEFAULT_BRANCH
        - cache-default
      paths:
        - ./target
  before_script:
    - apk add make cmake gcc g++
    - rustc -V
    - cargo --version
  script:
    - cargo build --verbose --release --bin gitinfo
  artifacts:
    # untracked: false
    # when: on_success
    # access: all
    expire_in: "30 days"
    paths:
      - "target/release/gitinfo"

fork-join:rust:
  stage: benchmark
  when: manual

.benchmark-base:
  stage:
    benchmark
  timeout: 5h
  needs:
    - job: build:gitinfo:release
      artifacts: true
    - job: fork-join:rust
  image: alpine:3.18
  before_script:
    - apk add git hyperfine bash
    - nproc --all
  variables:
  script:
    - echo ${URL}, ${TARGET}
    - git clone --no-checkout ${URL} ${TARGET}
    - cd ${TARGET}
    - git rev-list --count HEAD
    - git rev-list --count --no-merges HEAD
    - cd ..
    - ls -lah .
    - ls -lah ./scripts
    - ./target/release/gitinfo --help
    - hyperfine --warmup ${WARMUPS} --runs ${RUNS} --export-json hyperfine.gitinfo.${TARGET}.json --export-csv hyperfine.gitinfo.${TARGET}.csv --parameter-list repo ${TARGET} --parameter-list workers 1,2,3,4,5,6,7,8 --parameter-list algorithm histogram,myers,myers-minimal './target/release/gitinfo --git-dir {repo} --threads {workers} --algorithm {algorithm}'
  artifacts:
    # untracked: false
    when: always
    # access: all
    expire_in: "30 days"
    paths:
      - "hyperfine.gitinfo.${TARGET}.json"
      - "hyperfine.gitinfo.${TARGET}.csv"

bench-binocular: # 1724 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/INSO-TUWien/Binocular.git
    TARGET: binocular
    WARMUPS: 1
    RUNS: 10

bench-dubbo: # 7492 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/apache/dubbo.git
    TARGET: dubbo
    WARMUPS: 1
    RUNS: 5
    
bench-click: # 2443 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/pallets/click.git
    TARGET: click
    WARMUPS: 1
    RUNS: 10

bench-jinja: # 2794 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/pallets/jinja.git
    TARGET: jinja
    WARMUPS: 1
    RUNS: 10

bench-spring-ai: # 642 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/spring-projects/spring-ai.git
    TARGET: spring-ai
    WARMUPS: 1
    RUNS: 15

bench-spring-graphql: # 1294 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/spring-projects/spring-graphql.git
    TARGET: spring-graphql
    WARMUPS: 1
    RUNS: 10

bench-spring-kafka: # 2348 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/spring-projects/spring-kafka.git
    TARGET: spring-kafka
    WARMUPS: 1
    RUNS: 5

bench-spring-data-jpa: # 2143 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/spring-projects/spring-data-jpa.git
    TARGET: spring-data-jpa
    WARMUPS: 1
    RUNS: 5

bench-spring-petclinic: # 893 commits
  extends: .benchmark-base
  variables:
    URL: https://github.com/spring-projects/spring-petclinic.git
    TARGET: spring-petclinic
    WARMUPS: 1
    RUNS: 15