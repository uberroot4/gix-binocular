stages:
  - build
  - benchmark

build:gitinfo:release:
  stage: build
  image: rust:1.74.1-alpine3.18
  cache:
    - key:
        files:
          - Cargo.lock
      fallback_keys:
        - cache-$CI_DEFAULT_BRANCH
        - cache-default
      paths:
        - ./target
  before_script:
    - apk add make cmake gcc g++
    - rustc -V
    - cargo --version
  script:
    - cargo build --verbose --release --bin gitinfo
  artifacts:
    # untracked: false
    # when: on_success
    # access: all
    expire_in: "30 days"
    paths:
      - "target/release/gitinfo"

.benchmark-base:
  stage:
    benchmark
  timeout: 5h
  needs:
    - job: build:gitinfo:release
      artifacts: true
  image: alpine:3.18
  before_script:
    - apk add git hyperfine bash
    - nproc --all
  variables:
  script:
    - echo ${URL}, ${TARGET}
    - git clone --no-checkout ${URL} ${TARGET}
    - cd ${TARGET}
    - git rev-list --count HEAD
    - git rev-list --count --no-merges HEAD
    - cd ..
    - ls -lah .
    - ls -lah ./scripts
    - ./target/release/gitinfo --help
    - hyperfine --warmup 1 --runs 5 --export-json hyperfine.gitinfo.${TARGET}.json --export-csv hyperfine.gitinfo.${TARGET}.csv --parameter-list repo ${TARGET} --parameter-list workers 1,2,3,4,5,6,7,8 --parameter-list algorithm histogram,myers,myers-minimal './target/release/gitinfo --git-dir {repo} --threads {workers} --algorithm {algorithm}'
  artifacts:
    # untracked: false
    when: always
    # access: all
    expire_in: "30 days"
    paths:
      - "hyperfine.gitinfo.${TARGET}.json"
      - "hyperfine.gitinfo.${TARGET}.csv"

bench-binocular:
  extends: .benchmark-base
  variables:
    URL: https://github.com/INSO-TUWien/Binocular.git
    TARGET: binocular
bench-dubbo:
  extends: .benchmark-base
  variables:
    URL: https://github.com/apache/dubbo.git
    TARGET: dubbo