stages:
  - build
  - benchmark

build:gitinfo:release:
  stage: build
  image: rust:1.74.1-alpine3.18
  cache:
    - key:
        files:
          - Cargo.lock
      fallback_keys:
        - cache-$CI_DEFAULT_BRANCH
        - cache-default
      paths:
        - ./target
  before_script:
    - apk add make cmake gcc g++
    - rustc -V
    - cargo --version
  script:
    - cargo build --verbose --release --bin gitinfo
  artifacts:
    # untracked: false
    # when: on_success
    # access: all
    expire_in: "30 days"
    paths:
      - "target/release/gitinfo"

bench-binocular:
  stage:
    benchmark
  needs:
    - job: build:gitinfo:release
      artifacts: true
  image: alpine:3.18
  before_script:
    - apk add git hyperfine bash
    - lscpu | egrep 'Model name|Socket|Thread|NUMA|CPU\(s\)'
  script:
    - git clone --no-checkout https://github.com/INSO-TUWien/Binocular.git
    - cd Binocular
    - git checkout develop
    - git rev-list --count HEAD
    - git rev-list --count --no-merges HEAD
    - cd ..
    - ls -lah .
    - ./target/release/gitinfo --help
    - ./scripts/measure.sh